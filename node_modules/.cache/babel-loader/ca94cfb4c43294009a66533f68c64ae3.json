{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Islam\\\\Desktop\\\\assignment-3\\\\src\\\\App.js\";\n\n/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Initialize state with empty lists and 0 balance\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.addCredit = credit => {\n      const newCreditList = [...this.state.creditList, credit];\n      this.setState({\n        creditList: newCreditList,\n        accountBalance: this.calculateAccountBalance(newCreditList, this.state.debitList)\n      });\n    };\n\n    this.addDebit = debit => {\n      const newDebitList = [...this.state.debitList, debit];\n      this.setState({\n        debitList: newDebitList,\n        accountBalance: this.calculateAccountBalance(this.state.creditList, newDebitList)\n      });\n    };\n\n    this.calculateAccountBalance = function () {\n      let creditList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      let debitList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      const totalCredits = creditList.reduce((sum, credit) => sum + credit.amount, 0);\n      const totalDebits = debitList.reduce((sum, debit) => sum + debit.amount, 0);\n      return (totalCredits - totalDebits).toFixed(2);\n    };\n\n    this.state = {\n      creditList: [],\n      debitList: [],\n      accountBalance: 0,\n      // Start balance at zero as per requirements\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  } // Mock login updates username in state\n\n\n  // Fetch initial credits and debits from API, then update balance\n  componentDidMount() {\n    const creditsUrl = 'https://johnnylaicode.github.io/api/credits.json';\n    const debitsUrl = 'https://johnnylaicode.github.io/api/debits.json';\n    Promise.all([fetch(creditsUrl), fetch(debitsUrl)]).then(async _ref => {\n      let [creditsRes, debitsRes] = _ref;\n      const creditList = await creditsRes.json();\n      const debitList = await debitsRes.json();\n      this.setState({\n        creditList,\n        debitList,\n        accountBalance: this.calculateAccountBalance(creditList, debitList)\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n  } // Render routes and pass props including addCredit and addDebit handlers\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/bank-of-react-starter-code\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Home, {\n            accountBalance: this.state.accountBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: () => /*#__PURE__*/_jsxDEV(UserProfile, {\n            userName: this.state.currentUser.userName,\n            memberSince: this.state.currentUser.memberSince\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: () => /*#__PURE__*/_jsxDEV(LogIn, {\n            user: this.state.currentUser,\n            mockLogIn: this.mockLogIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: () => /*#__PURE__*/_jsxDEV(Credits, {\n            credits: this.state.creditList,\n            addCredit: this.addCredit,\n            accountBalance: this.state.accountBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: () => /*#__PURE__*/_jsxDEV(Debits, {\n            debits: this.state.debitList,\n            addDebit: this.addDebit,\n            accountBalance: this.state.accountBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Islam/Desktop/assignment-3/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addCredit","credit","newCreditList","creditList","accountBalance","calculateAccountBalance","debitList","addDebit","debit","newDebitList","totalCredits","reduce","sum","amount","totalDebits","toFixed","memberSince","componentDidMount","creditsUrl","debitsUrl","Promise","all","fetch","then","creditsRes","debitsRes","json","catch","error","console","render"],"mappings":"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","sourcesContent":["/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Initialize state with empty lists and 0 balance\r\n    super();\r\n    this.state = {\r\n      creditList: [],\r\n      debitList: [],\r\n      accountBalance: 0,   // Start balance at zero as per requirements\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  // Mock login updates username in state\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = { ...this.state.currentUser };\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({ currentUser: newUser });\r\n  }\r\n\r\n  // Add a new credit, then recalculate balance\r\n  addCredit = (credit) => {\r\n    const newCreditList = [...this.state.creditList, credit];\r\n    this.setState({\r\n      creditList: newCreditList,\r\n      accountBalance: this.calculateAccountBalance(newCreditList, this.state.debitList),\r\n    });\r\n  }\r\n\r\n  // Add a new debit, then recalculate balance\r\n  addDebit = (debit) => {\r\n    const newDebitList = [...this.state.debitList, debit];\r\n    this.setState({\r\n      debitList: newDebitList,\r\n      accountBalance: this.calculateAccountBalance(this.state.creditList, newDebitList),\r\n    });\r\n  }\r\n\r\n  // Calculate account balance = total credits - total debits (rounded to 2 decimals)\r\n  calculateAccountBalance = (creditList = [], debitList = []) => {\r\n    const totalCredits = creditList.reduce((sum, credit) => sum + credit.amount, 0);\r\n    const totalDebits = debitList.reduce((sum, debit) => sum + debit.amount, 0);\r\n    return (totalCredits - totalDebits).toFixed(2);\r\n  }\r\n\r\n  // Fetch initial credits and debits from API, then update balance\r\n  componentDidMount() {\r\n    const creditsUrl = 'https://johnnylaicode.github.io/api/credits.json';\r\n    const debitsUrl = 'https://johnnylaicode.github.io/api/debits.json';\r\n\r\n    Promise.all([fetch(creditsUrl), fetch(debitsUrl)])\r\n      .then(async ([creditsRes, debitsRes]) => {\r\n        const creditList = await creditsRes.json();\r\n        const debitList = await debitsRes.json();\r\n        this.setState({\r\n          creditList,\r\n          debitList,\r\n          accountBalance: this.calculateAccountBalance(creditList, debitList),\r\n        });\r\n      })\r\n      .catch((error) => console.error('Error fetching data:', error));\r\n  }\r\n\r\n  // Render routes and pass props including addCredit and addDebit handlers\r\n  render() {\r\n    return (\r\n      <Router basename=\"/bank-of-react-starter-code\">\r\n        <div>\r\n          <Route exact path=\"/\" render={() => <Home accountBalance={this.state.accountBalance} />} />\r\n          <Route exact path=\"/userProfile\" render={() => (\r\n            <UserProfile\r\n              userName={this.state.currentUser.userName}\r\n              memberSince={this.state.currentUser.memberSince}\r\n            />\r\n          )} />\r\n          <Route exact path=\"/login\" render={() => (\r\n            <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\r\n          )} />\r\n          <Route exact path=\"/credits\" render={() => (\r\n            <Credits\r\n              credits={this.state.creditList}\r\n              addCredit={this.addCredit}\r\n              accountBalance={this.state.accountBalance}\r\n            />\r\n          )} />\r\n          <Route exact path=\"/debits\" render={() => (\r\n            <Debits\r\n              debits={this.state.debitList}\r\n              addDebit={this.addDebit}\r\n              accountBalance={this.state.accountBalance}\r\n            />\r\n          )} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}